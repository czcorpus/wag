{
  "scripts": {
    "schemata:make-core-tiles": [
      {
        "repeater": "$launch_setting_tiles",
        "sequential": "schemata:make-tile $_path $_conf_name"
      }
    ],
    "schemata:make-tile": "tsx ./scripts/create-tile-schema.ts $1 $2",
    "schemata:make-conf": [
      "typescript-json-schema src/js/conf/index.ts ServerConf --ignoreErrors --out conf/server-schema.json --required --strictNullChecks",
      "typescript-json-schema src/js/conf/index.ts ClientStaticConf --ignoreErrors --out conf/wdglance-schema.json --required --strictNullChecks",
      "typescript-json-schema src/js/conf/index.ts LayoutsConfig --ignoreErrors --out conf/layouts-schema.json --required --strictNullChecks",
      "typescript-json-schema src/js/conf/index.ts MultiSourceTileConf --ignoreErrors --out conf/tiles-schema.json --required --strictNullChecks",
      "typescript-json-schema src/js/conf/index.ts ColorsConf --ignoreErrors --out conf/themes-schema.json --required --strictNullChecks",
      "typescript-json-schema src/js/conf/index.ts DataReadabilityMapping --ignoreErrors --out conf/dataReadability-schema.json --required --strictNullChecks"
    ],
    "schemata:check-conf": "sh ./scripts/check-conf.sh",
    "schemata:check-samples": [
      "ajv --allow-union-types --all-errors -s ./conf/server-schema.json -d ./conf/server.sample.json",
      "ajv --allow-union-types -s ./conf/wdglance-schema.json -d ./conf/wdglance.sample.json"
    ],
    "build:production": [
      "typecheck:client",
      "typecheck:server",
      "npm test",
      "webpack --config webpack.prod.js",
      "webpack --config webpack.server.js"
    ],
    "build:server": [
      "webpack --config webpack.server.js"
    ],
    "typecheck:client": [
      "node_modules/typescript/bin/tsc --project ./tsconfig.json --noEmit",
      {
        "condition": "$?",
        "sequential-then": "echo 'Client-side TypeScript types: OK'"
      }
    ],
    "typecheck:server": [
      "node_modules/typescript/bin/tsc --project ./tsconfig.server.json --noEmit",
      {
        "condition": "$?",
        "sequential-then": "echo 'Server-side TypeScript types: OK'"
      }
    ],
    "create:custom-tile": "tsx ./scripts/create-tile.ts $1",
    "create:tile-conf": "tsx ./scripts/create-tile-conf.ts $1",
    "devel-server": "node node_modules/webpack/bin/webpack.js serve --config webpack.dev.js",
    "server": "SERVER_CONF=${SERVER_CONF:-./conf/server.json} node dist-server/service.js",
    "test": "npm test"
  },
  "settings": {
    "tiles": [
      {
        "path": "core/colloc",
        "conf_name": "CollocationsTileConf"
      },
      {
        "path": "core/concordance",
        "conf_name": "ConcordanceTileConf"
      },
      {
        "path": "core/freqBar",
        "conf_name": "FreqBarTileConf"
      },
      {
        "path": "core/geoAreas",
        "conf_name": "GeoAreasTileConf"
      },
      {
        "path": "core/html",
        "conf_name": "HtmlTileConf"
      },
      {
        "path": "core/mergeCorpFreq",
        "conf_name": "MergeCorpFreqTileConf"
      },
      {
        "path": "core/speeches",
        "conf_name": "SpeechesTileConf"
      },
      {
        "path": "core/syntacticColls",
        "conf_name": "SyntacticCollsTileConf"
      },
      {
        "path": "core/syntacticCollsVsTextTypes",
        "conf_name": "SyntacticCollsVsTextTypesTileConf"
      },
      {
        "path": "core/timeDistrib",
        "conf_name": "TimeDistTileConf"
      },
      {
        "path": "core/translations",
        "conf_name": "TranslationsTileConf"
      },
      {
        "path": "core/treqSubsets",
        "conf_name": "TreqSubsetsTileConf"
      },
      {
        "path": "core/wordForms",
        "conf_name": "WordFormsTileConf"
      },
      {
        "path": "core/wordFreq",
        "conf_name": "WordFreqTileConf"
      },
      {
        "path": "core/wordSim",
        "conf_name": "WordSimTileConf"
      }
    ]
  }
}