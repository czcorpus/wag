{
  "scripts": {
    "schemata:make": [
      "typescript-json-schema src/js/conf/index.ts ServerConf --ignoreErrors --out conf/server-schema.json --required --strictNullChecks",
      "typescript-json-schema src/js/conf/index.ts ClientStaticConf --ignoreErrors --out conf/wdglance-schema.json --required --strictNullChecks",
      "typescript-json-schema src/js/conf/index.ts LanguageLayoutsConfig --ignoreErrors --out conf/layouts-schema.json --required --strictNullChecks",
      "typescript-json-schema src/js/conf/index.ts LanguageAnyTileConf --ignoreErrors --out conf/tiles-schema.json --required --strictNullChecks",
      "typescript-json-schema src/js/conf/index.ts ColorsConf --ignoreErrors --out conf/themes-schema.json --required --strictNullChecks"
    ],
    "schemata:configtest": [
      "ajv -s ./conf/server-schema.json -d ./conf/server.json",
      "ajv -s ./conf/wdglance-schema.json -d ./conf/wdglance.json",
      "LAYOUTS_PATH=\"$(node -pe 'JSON.parse(fs.readFileSync(\"conf/wdglance.json\", \"utf8\")).layouts')\"",
      "if test -f \"$LAYOUTS_PATH\" 2> /dev/null; then ajv -s ./conf/tiles-schema.json -d $LAYOUTS_PATH; else echo \"layouts config file not found\"; fi",
      "TILES_PATH=\"$(node -pe 'JSON.parse(fs.readFileSync(\"conf/wdglance.json\", \"utf8\")).tiles')\"",
      "if test -f \"$TILES_PATH\" 2> /dev/null; then ajv -s ./conf/tiles-schema.json -d $TILES_PATH; else echo \"tiles config file not found\"; fi",
      "THEMES_PATH=\"$(node -pe 'JSON.parse(fs.readFileSync(\"conf/wdglance.json\", \"utf8\")).colors')\"",
      "if test -f \"$THEMES_PATH\" 2> /dev/null; then ajv -s ./conf/tiles-schema.json -d $THEMES_PATH; else echo \"themes config file not found\"; fi"
    ],
    "schemata:sampletest": [
      "ajv -s ./conf/server-schema.json -d ./conf/server.sample.json",
      "ajv -s ./conf/wdglance-schema.json -d ./conf/wdglance.sample.json"
    ],
    "build:devel": "webpack --config webpack.dev.js",
    "build:production": "webpack --config webpack.prod.js",
    "build:server": "webpack --config webpack.server.js",
    "devel-server": "webpack-dev-server --config webpack.dev.js",
    "server": "node dist-server/service.js",
    "test": "npm test"
  }
}